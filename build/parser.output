Grammar

    0 $accept: root $end

    1 root: function_list

    2 function_list: function function_list
    3              | function

    4 function: function_decl TOK_SEMICOLON
    5         | function_defn

    6 function_decl: type name TOK_LPAREN parameter_list TOK_RPAREN
    7              | type name TOK_LPAREN TOK_RPAREN

    8 function_defn: function_decl block

    9 type: TOK_IDENTIFIER

   10 name: TOK_IDENTIFIER

   11 parameter_list: declaration
   12               | declaration TOK_COMMA parameter_list

   13 block: TOK_LBRACE suite TOK_RBRACE
   14      | TOK_LBRACE TOK_RBRACE

   15 suite: statement
   16      | statement suite

   17 declaration: type name

   18 statement: single_statement TOK_SEMICOLON
   19          | compound_statement

   20 single_statement: declaration TOK_ASSIGN expression
   21                 | name TOK_ASSIGN expression
   22                 | name binary_op TOK_ASSIGN expression
   23                 | TOK_BREAK
   24                 | TOK_CONTINUE
   25                 | TOK_RETURN
   26                 | TOK_RETURN expression
   27                 | expression

   28 binary_op: TOK_PLUS
   29          | TOK_MINUS
   30          | TOK_STAR
   31          | TOK_SLASH
   32          | TOK_LOG_AND
   33          | TOK_LOG_OR

   34 expression: ternary_expression

   35 ternary_expression: logical_expression
   36                   | logical_expression TOK_QUESTION_MARK logical_expression TOK_COLON ternary_expression

   37 logical_expression: equality
   38                   | equality TOK_LOG_AND logical_expression
   39                   | equality TOK_LOG_OR logical_expression

   40 equality: comparison
   41         | comparison TOK_EQ equality
   42         | comparison TOK_NE equality

   43 comparison: term
   44           | term TOK_LT comparison
   45           | term TOK_LE comparison
   46           | term TOK_GT comparison
   47           | term TOK_GE comparison

   48 term: factor
   49     | factor TOK_PLUS term
   50     | factor TOK_MINUS term

   51 factor: unary_expression
   52       | unary_expression TOK_STAR factor
   53       | unary_expression TOK_SLASH factor

   54 unary_expression: primary
   55                 | TOK_MINUS primary
   56                 | TOK_LPAREN type TOK_RPAREN primary

   57 primary: TOK_TRUE
   58        | TOK_FALSE
   59        | TOK_INTEGER
   60        | TOK_FLOAT
   61        | TOK_LPAREN expression TOK_RPAREN
   62        | function_call

   63 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN block
   64                   | TOK_FOR for_init for_cond for_act block
   65                   | TOK_WHILE TOK_LPAREN expression TOK_RPAREN block

   66 for_init: TOK_LPAREN single_statement TOK_SEMICOLON
   67         | TOK_LPAREN TOK_SEMICOLON

   68 for_cond: expression TOK_SEMICOLON
   69         | TOK_SEMICOLON

   70 for_act: single_statement TOK_RPAREN
   71        | TOK_RPAREN

   72 function_call: name TOK_LPAREN function_args TOK_RPAREN
   73              | name TOK_LPAREN TOK_RPAREN

   74 function_args: expression
   75              | expression TOK_COMMA function_args


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    TOK_IDENTIFIER <std::string> (258) 9 10
    TOK_INTEGER <int> (259) 59
    TOK_FLOAT <float> (260) 60
    TOK_TRUE <bool> (261) 57
    TOK_FALSE <bool> (262) 58
    TOK_LPAREN <char> (263) 6 7 56 61 63 65 66 67 72 73
    TOK_RPAREN <char> (264) 6 7 56 61 63 65 70 71 72 73
    TOK_LBRACE <char> (265) 13 14
    TOK_RBRACE <char> (266) 13 14
    TOK_EQ <std::string> (267) 41
    TOK_NE <std::string> (268) 42
    TOK_LT <char> (269) 44
    TOK_GT <char> (270) 46
    TOK_LE <std::string> (271) 45
    TOK_GE <std::string> (272) 47
    TOK_PLUS <char> (273) 28 49
    TOK_MINUS <char> (274) 29 50 55
    TOK_STAR <char> (275) 30 52
    TOK_SLASH <char> (276) 31 53
    TOK_LOG_AND <std::string> (277) 32 38
    TOK_LOG_OR <std::string> (278) 33 39
    TOK_IF <std::string> (279) 63
    TOK_WHILE <std::string> (280) 65
    TOK_FOR <std::string> (281) 64
    TOK_BREAK <std::string> (282) 23
    TOK_CONTINUE <std::string> (283) 24
    TOK_RETURN <std::string> (284) 25 26
    TOK_COMMA <char> (285) 12 75
    TOK_SEMICOLON <char> (286) 4 18 66 67 68 69
    TOK_COLON <char> (287) 36
    TOK_QUESTION_MARK <char> (288) 36
    TOK_ASSIGN <char> (289) 20 21 22


Nonterminals, with rules where they appear

    $accept (35)
        on left: 0
    root <Node*> (36)
        on left: 1
        on right: 0
    function_list (37)
        on left: 2 3
        on right: 1 2
    function (38)
        on left: 4 5
        on right: 2 3
    function_decl (39)
        on left: 6 7
        on right: 4 8
    function_defn (40)
        on left: 8
        on right: 5
    type (41)
        on left: 9
        on right: 6 7 17 56
    name (42)
        on left: 10
        on right: 6 7 17 21 22 72 73
    parameter_list (43)
        on left: 11 12
        on right: 6 12
    block (44)
        on left: 13 14
        on right: 8 63 64 65
    suite (45)
        on left: 15 16
        on right: 13 16
    declaration (46)
        on left: 17
        on right: 11 12 20
    statement (47)
        on left: 18 19
        on right: 15 16
    single_statement (48)
        on left: 20 21 22 23 24 25 26 27
        on right: 18 66 70
    binary_op (49)
        on left: 28 29 30 31 32 33
        on right: 22
    expression (50)
        on left: 34
        on right: 20 21 22 26 27 61 63 65 68 74 75
    ternary_expression (51)
        on left: 35 36
        on right: 34 36
    logical_expression (52)
        on left: 37 38 39
        on right: 35 36 38 39
    equality (53)
        on left: 40 41 42
        on right: 37 38 39 41 42
    comparison (54)
        on left: 43 44 45 46 47
        on right: 40 41 42 44 45 46 47
    term (55)
        on left: 48 49 50
        on right: 43 44 45 46 47 49 50
    factor (56)
        on left: 51 52 53
        on right: 48 49 50 52 53
    unary_expression (57)
        on left: 54 55 56
        on right: 51 52 53
    primary (58)
        on left: 57 58 59 60 61 62
        on right: 54 55 56
    compound_statement (59)
        on left: 63 64 65
        on right: 19
    for_init (60)
        on left: 66 67
        on right: 64
    for_cond (61)
        on left: 68 69
        on right: 64
    for_act (62)
        on left: 70 71
        on right: 64
    function_call (63)
        on left: 72 73
        on right: 62
    function_args (64)
        on left: 74 75
        on right: 72 75


State 0

    0 $accept: • root $end

    TOK_IDENTIFIER  shift, and go to state 1

    root           go to state 2
    function_list  go to state 3
    function       go to state 4
    function_decl  go to state 5
    function_defn  go to state 6
    type           go to state 7


State 1

    9 type: TOK_IDENTIFIER •

    $default  reduce using rule 9 (type)


State 2

    0 $accept: root • $end

    $end  shift, and go to state 8


State 3

    1 root: function_list •

    $default  reduce using rule 1 (root)


State 4

    2 function_list: function • function_list
    3              | function •

    TOK_IDENTIFIER  shift, and go to state 1

    $default  reduce using rule 3 (function_list)

    function_list  go to state 9
    function       go to state 4
    function_decl  go to state 5
    function_defn  go to state 6
    type           go to state 7


State 5

    4 function: function_decl • TOK_SEMICOLON
    8 function_defn: function_decl • block

    TOK_LBRACE     shift, and go to state 10
    TOK_SEMICOLON  shift, and go to state 11

    block  go to state 12


State 6

    5 function: function_defn •

    $default  reduce using rule 5 (function)


State 7

    6 function_decl: type • name TOK_LPAREN parameter_list TOK_RPAREN
    7              | type • name TOK_LPAREN TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 13

    name  go to state 14


State 8

    0 $accept: root $end •

    $default  accept


State 9

    2 function_list: function function_list •

    $default  reduce using rule 2 (function_list)


State 10

   13 block: TOK_LBRACE • suite TOK_RBRACE
   14      | TOK_LBRACE • TOK_RBRACE

    TOK_IDENTIFIER  shift, and go to state 15
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_RBRACE      shift, and go to state 21
    TOK_MINUS       shift, and go to state 22
    TOK_IF          shift, and go to state 23
    TOK_WHILE       shift, and go to state 24
    TOK_FOR         shift, and go to state 25
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28

    type                go to state 29
    name                go to state 30
    suite               go to state 31
    declaration         go to state 32
    statement           go to state 33
    single_statement    go to state 34
    expression          go to state 35
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    compound_statement  go to state 44
    function_call       go to state 45


State 11

    4 function: function_decl TOK_SEMICOLON •

    $default  reduce using rule 4 (function)


State 12

    8 function_defn: function_decl block •

    $default  reduce using rule 8 (function_defn)


State 13

   10 name: TOK_IDENTIFIER •

    $default  reduce using rule 10 (name)


State 14

    6 function_decl: type name • TOK_LPAREN parameter_list TOK_RPAREN
    7              | type name • TOK_LPAREN TOK_RPAREN

    TOK_LPAREN  shift, and go to state 46


State 15

    9 type: TOK_IDENTIFIER •
   10 name: TOK_IDENTIFIER •

    TOK_IDENTIFIER  reduce using rule 9 (type)
    TOK_RPAREN      reduce using rule 9 (type)
    $default        reduce using rule 10 (name)


State 16

   59 primary: TOK_INTEGER •

    $default  reduce using rule 59 (primary)


State 17

   60 primary: TOK_FLOAT •

    $default  reduce using rule 60 (primary)


State 18

   57 primary: TOK_TRUE •

    $default  reduce using rule 57 (primary)


State 19

   58 primary: TOK_FALSE •

    $default  reduce using rule 58 (primary)


State 20

   56 unary_expression: TOK_LPAREN • type TOK_RPAREN primary
   61 primary: TOK_LPAREN • expression TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 15
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    type                go to state 47
    name                go to state 48
    expression          go to state 49
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 21

   14 block: TOK_LBRACE TOK_RBRACE •

    $default  reduce using rule 14 (block)


State 22

   55 unary_expression: TOK_MINUS • primary

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 50

    name           go to state 48
    primary        go to state 51
    function_call  go to state 45


State 23

   63 compound_statement: TOK_IF • TOK_LPAREN expression TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 52


State 24

   65 compound_statement: TOK_WHILE • TOK_LPAREN expression TOK_RPAREN block

    TOK_LPAREN  shift, and go to state 53


State 25

   64 compound_statement: TOK_FOR • for_init for_cond for_act block

    TOK_LPAREN  shift, and go to state 54

    for_init  go to state 55


State 26

   23 single_statement: TOK_BREAK •

    $default  reduce using rule 23 (single_statement)


State 27

   24 single_statement: TOK_CONTINUE •

    $default  reduce using rule 24 (single_statement)


State 28

   25 single_statement: TOK_RETURN •
   26                 | TOK_RETURN • expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    $default  reduce using rule 25 (single_statement)

    name                go to state 48
    expression          go to state 56
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 29

   17 declaration: type • name

    TOK_IDENTIFIER  shift, and go to state 13

    name  go to state 57


State 30

   21 single_statement: name • TOK_ASSIGN expression
   22                 | name • binary_op TOK_ASSIGN expression
   72 function_call: name • TOK_LPAREN function_args TOK_RPAREN
   73              | name • TOK_LPAREN TOK_RPAREN

    TOK_LPAREN   shift, and go to state 58
    TOK_PLUS     shift, and go to state 59
    TOK_MINUS    shift, and go to state 60
    TOK_STAR     shift, and go to state 61
    TOK_SLASH    shift, and go to state 62
    TOK_LOG_AND  shift, and go to state 63
    TOK_LOG_OR   shift, and go to state 64
    TOK_ASSIGN   shift, and go to state 65

    binary_op  go to state 66


State 31

   13 block: TOK_LBRACE suite • TOK_RBRACE

    TOK_RBRACE  shift, and go to state 67


State 32

   20 single_statement: declaration • TOK_ASSIGN expression

    TOK_ASSIGN  shift, and go to state 68


State 33

   15 suite: statement •
   16      | statement • suite

    TOK_IDENTIFIER  shift, and go to state 15
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22
    TOK_IF          shift, and go to state 23
    TOK_WHILE       shift, and go to state 24
    TOK_FOR         shift, and go to state 25
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28

    $default  reduce using rule 15 (suite)

    type                go to state 29
    name                go to state 30
    suite               go to state 69
    declaration         go to state 32
    statement           go to state 33
    single_statement    go to state 34
    expression          go to state 35
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    compound_statement  go to state 44
    function_call       go to state 45


State 34

   18 statement: single_statement • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 70


State 35

   27 single_statement: expression •

    $default  reduce using rule 27 (single_statement)


State 36

   34 expression: ternary_expression •

    $default  reduce using rule 34 (expression)


State 37

   35 ternary_expression: logical_expression •
   36                   | logical_expression • TOK_QUESTION_MARK logical_expression TOK_COLON ternary_expression

    TOK_QUESTION_MARK  shift, and go to state 71

    $default  reduce using rule 35 (ternary_expression)


State 38

   37 logical_expression: equality •
   38                   | equality • TOK_LOG_AND logical_expression
   39                   | equality • TOK_LOG_OR logical_expression

    TOK_LOG_AND  shift, and go to state 72
    TOK_LOG_OR   shift, and go to state 73

    $default  reduce using rule 37 (logical_expression)


State 39

   40 equality: comparison •
   41         | comparison • TOK_EQ equality
   42         | comparison • TOK_NE equality

    TOK_EQ  shift, and go to state 74
    TOK_NE  shift, and go to state 75

    $default  reduce using rule 40 (equality)


State 40

   43 comparison: term •
   44           | term • TOK_LT comparison
   45           | term • TOK_LE comparison
   46           | term • TOK_GT comparison
   47           | term • TOK_GE comparison

    TOK_LT  shift, and go to state 76
    TOK_GT  shift, and go to state 77
    TOK_LE  shift, and go to state 78
    TOK_GE  shift, and go to state 79

    $default  reduce using rule 43 (comparison)


State 41

   48 term: factor •
   49     | factor • TOK_PLUS term
   50     | factor • TOK_MINUS term

    TOK_PLUS   shift, and go to state 80
    TOK_MINUS  shift, and go to state 81

    $default  reduce using rule 48 (term)


State 42

   51 factor: unary_expression •
   52       | unary_expression • TOK_STAR factor
   53       | unary_expression • TOK_SLASH factor

    TOK_STAR   shift, and go to state 82
    TOK_SLASH  shift, and go to state 83

    $default  reduce using rule 51 (factor)


State 43

   54 unary_expression: primary •

    $default  reduce using rule 54 (unary_expression)


State 44

   19 statement: compound_statement •

    $default  reduce using rule 19 (statement)


State 45

   62 primary: function_call •

    $default  reduce using rule 62 (primary)


State 46

    6 function_decl: type name TOK_LPAREN • parameter_list TOK_RPAREN
    7              | type name TOK_LPAREN • TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 1
    TOK_RPAREN      shift, and go to state 84

    type            go to state 29
    parameter_list  go to state 85
    declaration     go to state 86


State 47

   56 unary_expression: TOK_LPAREN type • TOK_RPAREN primary

    TOK_RPAREN  shift, and go to state 87


State 48

   72 function_call: name • TOK_LPAREN function_args TOK_RPAREN
   73              | name • TOK_LPAREN TOK_RPAREN

    TOK_LPAREN  shift, and go to state 58


State 49

   61 primary: TOK_LPAREN expression • TOK_RPAREN

    TOK_RPAREN  shift, and go to state 88


State 50

   61 primary: TOK_LPAREN • expression TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 49
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 51

   55 unary_expression: TOK_MINUS primary •

    $default  reduce using rule 55 (unary_expression)


State 52

   63 compound_statement: TOK_IF TOK_LPAREN • expression TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 89
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 53

   65 compound_statement: TOK_WHILE TOK_LPAREN • expression TOK_RPAREN block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 90
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 54

   66 for_init: TOK_LPAREN • single_statement TOK_SEMICOLON
   67         | TOK_LPAREN • TOK_SEMICOLON

    TOK_IDENTIFIER  shift, and go to state 15
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28
    TOK_SEMICOLON   shift, and go to state 91

    type                go to state 29
    name                go to state 30
    declaration         go to state 32
    single_statement    go to state 92
    expression          go to state 35
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 55

   64 compound_statement: TOK_FOR for_init • for_cond for_act block

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22
    TOK_SEMICOLON   shift, and go to state 93

    name                go to state 48
    expression          go to state 94
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    for_cond            go to state 95
    function_call       go to state 45


State 56

   26 single_statement: TOK_RETURN expression •

    $default  reduce using rule 26 (single_statement)


State 57

   17 declaration: type name •

    $default  reduce using rule 17 (declaration)


State 58

   72 function_call: name TOK_LPAREN • function_args TOK_RPAREN
   73              | name TOK_LPAREN • TOK_RPAREN

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_RPAREN      shift, and go to state 96
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 97
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45
    function_args       go to state 98


State 59

   28 binary_op: TOK_PLUS •

    $default  reduce using rule 28 (binary_op)


State 60

   29 binary_op: TOK_MINUS •

    $default  reduce using rule 29 (binary_op)


State 61

   30 binary_op: TOK_STAR •

    $default  reduce using rule 30 (binary_op)


State 62

   31 binary_op: TOK_SLASH •

    $default  reduce using rule 31 (binary_op)


State 63

   32 binary_op: TOK_LOG_AND •

    $default  reduce using rule 32 (binary_op)


State 64

   33 binary_op: TOK_LOG_OR •

    $default  reduce using rule 33 (binary_op)


State 65

   21 single_statement: name TOK_ASSIGN • expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 99
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 66

   22 single_statement: name binary_op • TOK_ASSIGN expression

    TOK_ASSIGN  shift, and go to state 100


State 67

   13 block: TOK_LBRACE suite TOK_RBRACE •

    $default  reduce using rule 13 (block)


State 68

   20 single_statement: declaration TOK_ASSIGN • expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 101
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 69

   16 suite: statement suite •

    $default  reduce using rule 16 (suite)


State 70

   18 statement: single_statement TOK_SEMICOLON •

    $default  reduce using rule 18 (statement)


State 71

   36 ternary_expression: logical_expression TOK_QUESTION_MARK • logical_expression TOK_COLON ternary_expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    logical_expression  go to state 102
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 72

   38 logical_expression: equality TOK_LOG_AND • logical_expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    logical_expression  go to state 103
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 73

   39 logical_expression: equality TOK_LOG_OR • logical_expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    logical_expression  go to state 104
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 74

   41 equality: comparison TOK_EQ • equality

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    equality          go to state 105
    comparison        go to state 39
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 75

   42 equality: comparison TOK_NE • equality

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    equality          go to state 106
    comparison        go to state 39
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 76

   44 comparison: term TOK_LT • comparison

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    comparison        go to state 107
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 77

   46 comparison: term TOK_GT • comparison

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    comparison        go to state 108
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 78

   45 comparison: term TOK_LE • comparison

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    comparison        go to state 109
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 79

   47 comparison: term TOK_GE • comparison

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    comparison        go to state 110
    term              go to state 40
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 80

   49 term: factor TOK_PLUS • term

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    term              go to state 111
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 81

   50 term: factor TOK_MINUS • term

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    term              go to state 112
    factor            go to state 41
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 82

   52 factor: unary_expression TOK_STAR • factor

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    factor            go to state 113
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 83

   53 factor: unary_expression TOK_SLASH • factor

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name              go to state 48
    factor            go to state 114
    unary_expression  go to state 42
    primary           go to state 43
    function_call     go to state 45


State 84

    7 function_decl: type name TOK_LPAREN TOK_RPAREN •

    $default  reduce using rule 7 (function_decl)


State 85

    6 function_decl: type name TOK_LPAREN parameter_list • TOK_RPAREN

    TOK_RPAREN  shift, and go to state 115


State 86

   11 parameter_list: declaration •
   12               | declaration • TOK_COMMA parameter_list

    TOK_COMMA  shift, and go to state 116

    $default  reduce using rule 11 (parameter_list)


State 87

   56 unary_expression: TOK_LPAREN type TOK_RPAREN • primary

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 50

    name           go to state 48
    primary        go to state 117
    function_call  go to state 45


State 88

   61 primary: TOK_LPAREN expression TOK_RPAREN •

    $default  reduce using rule 61 (primary)


State 89

   63 compound_statement: TOK_IF TOK_LPAREN expression • TOK_RPAREN block

    TOK_RPAREN  shift, and go to state 118


State 90

   65 compound_statement: TOK_WHILE TOK_LPAREN expression • TOK_RPAREN block

    TOK_RPAREN  shift, and go to state 119


State 91

   67 for_init: TOK_LPAREN TOK_SEMICOLON •

    $default  reduce using rule 67 (for_init)


State 92

   66 for_init: TOK_LPAREN single_statement • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 120


State 93

   69 for_cond: TOK_SEMICOLON •

    $default  reduce using rule 69 (for_cond)


State 94

   68 for_cond: expression • TOK_SEMICOLON

    TOK_SEMICOLON  shift, and go to state 121


State 95

   64 compound_statement: TOK_FOR for_init for_cond • for_act block

    TOK_IDENTIFIER  shift, and go to state 15
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_RPAREN      shift, and go to state 122
    TOK_MINUS       shift, and go to state 22
    TOK_BREAK       shift, and go to state 26
    TOK_CONTINUE    shift, and go to state 27
    TOK_RETURN      shift, and go to state 28

    type                go to state 29
    name                go to state 30
    declaration         go to state 32
    single_statement    go to state 123
    expression          go to state 35
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    for_act             go to state 124
    function_call       go to state 45


State 96

   73 function_call: name TOK_LPAREN TOK_RPAREN •

    $default  reduce using rule 73 (function_call)


State 97

   74 function_args: expression •
   75              | expression • TOK_COMMA function_args

    TOK_COMMA  shift, and go to state 125

    $default  reduce using rule 74 (function_args)


State 98

   72 function_call: name TOK_LPAREN function_args • TOK_RPAREN

    TOK_RPAREN  shift, and go to state 126


State 99

   21 single_statement: name TOK_ASSIGN expression •

    $default  reduce using rule 21 (single_statement)


State 100

   22 single_statement: name binary_op TOK_ASSIGN • expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 127
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 101

   20 single_statement: declaration TOK_ASSIGN expression •

    $default  reduce using rule 20 (single_statement)


State 102

   36 ternary_expression: logical_expression TOK_QUESTION_MARK logical_expression • TOK_COLON ternary_expression

    TOK_COLON  shift, and go to state 128


State 103

   38 logical_expression: equality TOK_LOG_AND logical_expression •

    $default  reduce using rule 38 (logical_expression)


State 104

   39 logical_expression: equality TOK_LOG_OR logical_expression •

    $default  reduce using rule 39 (logical_expression)


State 105

   41 equality: comparison TOK_EQ equality •

    $default  reduce using rule 41 (equality)


State 106

   42 equality: comparison TOK_NE equality •

    $default  reduce using rule 42 (equality)


State 107

   44 comparison: term TOK_LT comparison •

    $default  reduce using rule 44 (comparison)


State 108

   46 comparison: term TOK_GT comparison •

    $default  reduce using rule 46 (comparison)


State 109

   45 comparison: term TOK_LE comparison •

    $default  reduce using rule 45 (comparison)


State 110

   47 comparison: term TOK_GE comparison •

    $default  reduce using rule 47 (comparison)


State 111

   49 term: factor TOK_PLUS term •

    $default  reduce using rule 49 (term)


State 112

   50 term: factor TOK_MINUS term •

    $default  reduce using rule 50 (term)


State 113

   52 factor: unary_expression TOK_STAR factor •

    $default  reduce using rule 52 (factor)


State 114

   53 factor: unary_expression TOK_SLASH factor •

    $default  reduce using rule 53 (factor)


State 115

    6 function_decl: type name TOK_LPAREN parameter_list TOK_RPAREN •

    $default  reduce using rule 6 (function_decl)


State 116

   12 parameter_list: declaration TOK_COMMA • parameter_list

    TOK_IDENTIFIER  shift, and go to state 1

    type            go to state 29
    parameter_list  go to state 129
    declaration     go to state 86


State 117

   56 unary_expression: TOK_LPAREN type TOK_RPAREN primary •

    $default  reduce using rule 56 (unary_expression)


State 118

   63 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN • block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 130


State 119

   65 compound_statement: TOK_WHILE TOK_LPAREN expression TOK_RPAREN • block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 131


State 120

   66 for_init: TOK_LPAREN single_statement TOK_SEMICOLON •

    $default  reduce using rule 66 (for_init)


State 121

   68 for_cond: expression TOK_SEMICOLON •

    $default  reduce using rule 68 (for_cond)


State 122

   71 for_act: TOK_RPAREN •

    $default  reduce using rule 71 (for_act)


State 123

   70 for_act: single_statement • TOK_RPAREN

    TOK_RPAREN  shift, and go to state 132


State 124

   64 compound_statement: TOK_FOR for_init for_cond for_act • block

    TOK_LBRACE  shift, and go to state 10

    block  go to state 133


State 125

   75 function_args: expression TOK_COMMA • function_args

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    expression          go to state 97
    ternary_expression  go to state 36
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45
    function_args       go to state 134


State 126

   72 function_call: name TOK_LPAREN function_args TOK_RPAREN •

    $default  reduce using rule 72 (function_call)


State 127

   22 single_statement: name binary_op TOK_ASSIGN expression •

    $default  reduce using rule 22 (single_statement)


State 128

   36 ternary_expression: logical_expression TOK_QUESTION_MARK logical_expression TOK_COLON • ternary_expression

    TOK_IDENTIFIER  shift, and go to state 13
    TOK_INTEGER     shift, and go to state 16
    TOK_FLOAT       shift, and go to state 17
    TOK_TRUE        shift, and go to state 18
    TOK_FALSE       shift, and go to state 19
    TOK_LPAREN      shift, and go to state 20
    TOK_MINUS       shift, and go to state 22

    name                go to state 48
    ternary_expression  go to state 135
    logical_expression  go to state 37
    equality            go to state 38
    comparison          go to state 39
    term                go to state 40
    factor              go to state 41
    unary_expression    go to state 42
    primary             go to state 43
    function_call       go to state 45


State 129

   12 parameter_list: declaration TOK_COMMA parameter_list •

    $default  reduce using rule 12 (parameter_list)


State 130

   63 compound_statement: TOK_IF TOK_LPAREN expression TOK_RPAREN block •

    $default  reduce using rule 63 (compound_statement)


State 131

   65 compound_statement: TOK_WHILE TOK_LPAREN expression TOK_RPAREN block •

    $default  reduce using rule 65 (compound_statement)


State 132

   70 for_act: single_statement TOK_RPAREN •

    $default  reduce using rule 70 (for_act)


State 133

   64 compound_statement: TOK_FOR for_init for_cond for_act block •

    $default  reduce using rule 64 (compound_statement)


State 134

   75 function_args: expression TOK_COMMA function_args •

    $default  reduce using rule 75 (function_args)


State 135

   36 ternary_expression: logical_expression TOK_QUESTION_MARK logical_expression TOK_COLON ternary_expression •

    $default  reduce using rule 36 (ternary_expression)
